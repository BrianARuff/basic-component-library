"use strict";(self.webpackChunkbasic_react_component_lib=self.webpackChunkbasic_react_component_lib||[]).push([[851],{"./src/components/Accordion/Accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AccordionStory:()=>AccordionStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Accordion_stories});var react=__webpack_require__("./node_modules/react/index.js");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var Accordion=function(props){var _props_renderHeaderContent,_props_renderBodyContent,_useState=_sliced_to_array((0,react.useState)(!1),2),isOpen=_useState[0],setIsOpen=_useState[1],id=(0,react.useId)();return /*#__PURE__*/react.createElement("div",{"data-testid":"accordion-container"},/*#__PURE__*/react.createElement("button",{"data-testid":"accordion-button",onClick:function(){return setIsOpen(function(prev){return!prev})},type:"button","aria-expanded":isOpen,"aria-controls":"".concat(id,"Content"),"aria-label":"Toggle Accordion",id:"".concat(id,"Button")},null==props?void 0:null===(_props_renderHeaderContent=props.renderHeaderContent)||void 0===_props_renderHeaderContent?void 0:_props_renderHeaderContent.call(props,{isOpen:isOpen,setIsOpen:setIsOpen})),/*#__PURE__*/react.createElement("div",{"aria-labelledby":"".concat(id,"Button"),id:"".concat(id,"Content"),role:"region",hidden:!isOpen},isOpen&&!props.isDisabled?null==props?void 0:null===(_props_renderBodyContent=props.renderBodyContent)||void 0===_props_renderBodyContent?void 0:_props_renderBodyContent.call(props,{isOpen:isOpen,setIsOpen:setIsOpen}):null))};try{Accordion.displayName="Accordion",Accordion.__docgenInfo={description:"",displayName:"Accordion",props:{isDisabled:{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean"}},renderBodyContent:{defaultValue:null,description:"",name:"renderBodyContent",required:!1,type:{name:"({ isOpen, setIsOpen, }: AccordionRenderContentProps) => ReactNode"}},renderHeaderContent:{defaultValue:null,description:"",name:"renderHeaderContent",required:!1,type:{name:"({ isOpen, setIsOpen, }: AccordionRenderContentProps) => ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Accordion/Accordion.tsx#Accordion"]={docgenInfo:Accordion.__docgenInfo,name:"Accordion",path:"src/components/Accordion/Accordion.tsx#Accordion"})}catch(__react_docgen_typescript_loader_error){}let Accordion_stories={title:"AccordionComponent"};var AccordionStory=function(){return /*#__PURE__*/react.createElement(Accordion,{isDisabled:!1,renderHeaderContent:function(){return /*#__PURE__*/react.createElement("h1",null,"Click to Toggle Accordion Content")},renderBodyContent:function(param){var setIsOpen=param.setIsOpen;return /*#__PURE__*/react.createElement("div",{style:{width:"30rem"}},/*#__PURE__*/react.createElement("p",{className:"accordion-content-message"},"Hello, Storybook World!"),/*#__PURE__*/react.createElement("button",{onClick:function(){return setIsOpen(!1)}},"Close Accordion"))}})};AccordionStory.parameters={...AccordionStory.parameters,docs:{...AccordionStory.parameters?.docs,source:{originalSource:'() => <Accordion isDisabled={false} renderHeaderContent={() => <h1>Click to Toggle Accordion Content</h1>} renderBodyContent={({\n  setIsOpen\n}) => {\n  return <div style={{\n    width: "30rem"\n  }}>\r\n          <p className="accordion-content-message">Hello, Storybook World!</p>\r\n          <button onClick={() => setIsOpen(false)}>Close Accordion</button>\r\n        </div>;\n}} />',...AccordionStory.parameters?.docs?.source}}};let __namedExportsOrder=["AccordionStory"]}}]);